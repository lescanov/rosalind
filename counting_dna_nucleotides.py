import sys
from IPython.core.ultratb import ColorTB
sys.excepthook = ColorTB()

'''
given a dna string s, return 4 integers that correspond to A, C, G, T that occur in s
'''
#looking back on this now, this is not ideal. it iterates over the string 4 times. 

def dna_string_counter(dna):
    a = dna.count("A")
    c = dna.count("C")
    g = dna.count("G")
    t = dna.count("T")
    return print(a, c, g, t)

# %%
dna_string_counter("AAAGATTGCATAGCCTCTCCAATAACGTCAGTCAGGTTCGAATTACCTGCAGCGGTTGAGGTTCGTGTATATTGGAGCGATGAGCCTAATGATAGTCCAGTAGCATGCTTCAATATTCGACTATTAGACGTAATTATTCCGGAATGTGCTTCCATAACGCAGACTAGGCCCTACTTTTCTTCAGGGCCCCGTTTCTTCTGCTCATAGACTTCTTAACACGTGCCCTACCCGGCAAAGTGGTGCGCAATTTGATTAGGTTGCTGCGTTTCTATCATGGTAATGCTGGCTCGGTTGACCATCGACGTCGCCTTTGGCTACAAAGTGCTGGCCTGCTTCCGGTTCTTCTTCTAGTTGCGTCCCCGACGTACTGACGCGGTTCGTAATAAAACATAACTATTACACCATTTTTCGACGATTGAACGGGCACTTGCGTTAACTGAGATGCAACCCAAGAACACTTTCGCTGTTCTGCTCGGGTTTCAGACGAGAACGCATCCTCCCTTTTTCTAATGCGCGTCCCCAGGCTGCTGTTACGCCGACCATTCTAATTTGGGCGCCTGTCCGCGCAAAGTATCGTAGACTGCCTGTATAGCAACATCCGAGCTAAGTATATAATACACCGAGCACTCGATATCCACCCCGCTATCAGCACCTGTCTCCAAACGCGGTCGATCTGTAGAGGAGCATCTTGTAAACACGCCGAAGCGCGTATGTTGCTTTATAAGTGCCATGCCCCCCGCGGGATAATCCCACTTCGGGGAGATGTTTAACTACCCGACCGTGCGGAATCCTATTGGCTAGCATTTAACCTTTACAACTATAACTCTACTAGGGGAGGCGTGTTTACTCGCTTGGCTGGGCTTAGGAGCGGGCCATTCGTTGAGTCACACTTGTTTAGCCGCCCCAAGGCCGCTCGATGTGTAATACACCACCTCAATCTACGCCGTAGGTATAGTGTCTCG")

# %%
#A better solution to this problem would be to iterate once and count the nucleo at each position
def dna(dna):
    dict = {}
    for i in dna:
        if i in dict:
            dict[i] += 1
        else:
            dict[i] = 1
    return print(dict["A"], dict["C"], dict["G"], dict["T"]) #although this does produce an error

#testing out dna function
dna("TATATATATATATTAATATATATCGA")